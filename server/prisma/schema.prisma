generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  first_name        String
  last_name         String
  middle_name       String
  spot_id           String?
  role              UserRole
  spot              Spot?              @relation(fields: [spot_id], references: [id])
  cars              Car[]
  refresh_token     String?
  created_at        DateTime           @default(now())
  push_notification PushNotification[]

  @@map("users")
}

model Car {
  id           String   @id @default(uuid())
  number_plate String
  capability   Float    @default(0)
  users        User[]
  routes       Route[]
  created_at   DateTime @default(now())

  @@map("cars")
}

model Route {
  id              String      @id @default(uuid())
  start_spot_text String?
  status          RouteStatus @default(STATUS_ACTIVE)
  end_spot_id     String?
  end_spot        Spot?       @relation(fields: [end_spot_id], references: [id])
  car             Car?        @relation(fields: [car_id], references: [id])
  car_id          String?
  created_at      DateTime    @default(now())

  @@map("routes")
}

model Spot {
  id           String   @id @default(uuid())
  coordinates  String?
  address_name String
  capability   Float    @default(0)
  users        User[]
  routes       Route[]
  created_at   DateTime @default(now())

  @@map("spots")
}

model PushNotification {
  id      String                  @id @default(uuid())
  user    User?                   @relation(fields: [user_id], references: [id])
  user_id String?
  status  PushNotificationStatus? @default(STATUS_ACTIVE)

  @@map("push_notifications")
}

enum UserRole {
  ROLE_ADMIN
  ROLE_EMPLOYEE_SELLER
  ROLE_EMPLOYEE_DRIVER
}

enum RouteStatus {
  STATUS_ACTIVE
  STATUS_WAITING
  STATUS_PAUSED
  STATUS_COMPLETED
  STATUS_CANCELLED
}

enum PushNotificationStatus {
  STATUS_ACTIVE
}
